version: "3"

services:
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: Dockerfile.Frontend
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - net

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile.App
    depends_on:
      - mysql
    restart: unless-stopped
    ports:
      - "81:80"
    networks:
      - net

  mysql:
    container_name: "mysql"
    restart: unless-stopped
    image: mysql:5.6
    environment:
      - MYSQL_DATABASE
      - MYSQL_PASSWORD
      - MYSQL_ROOT_PASSWORD
      - MYSQL_USER
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - net

  api:
    container_name: "api"
    command: npm run dev
    build:
      context: .
      dockerfile: Dockerfile.Api
    depends_on:
      - mysql
    volumes:
      - ./envs/.env.Api:/app/.env
      - node_modules:/app/node_modules
    environment:
      - API_ENV=prod
    ports:
      - "8081:8081"
    networks:
      - net

  auth:
    container_name: "auth"
    command: npm run dev
    build:
      context: .
      dockerfile: Dockerfile.Auth
    depends_on:
      - mysql
    volumes:
      - ./envs/.env.Auth:/app/.env
      - auth_node_modules:/app/node_modules
    environment:
      - API_ENV=prod
    ports:
      - "8080:8080"
    networks:
      - net

networks:
  net:
volumes:
  data:
  node_modules:
  auth_node_modules:
